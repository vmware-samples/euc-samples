apply plugin: 'com.android.application'

android {

    compileSdkVersion 28

    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId 'com.example.android.wsoappanalytics'
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 20
        versionName '5.5.20'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "mode"
    productFlavors {
        sdkonly {}
        airwlab {
            minSdkVersion 21
            applicationId 'com.airwlab.wsoappanalytics'
            targetSdkVersion 28
            versionCode 15
            versionName '1.0.15 sdk 5.8.11 sandbox'
        }
        ndk {
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
    sourceSets.main {
        jni.srcDirs = [] //disable automatic ndk-build call
    }
    sourceSets.ndk {
        jniLibs.srcDir 'src/main/libs'
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.squareup.okhttp3:okhttp:4.2.2'
    api 'com.squareup.okhttp3:logging-interceptor:4.2.2'
    implementation files('sdk/crittercism_v5_8_11_sdkonly.jar')
}

task ndkBuild(type: Exec) {
    if (android.ndkDirectory == null) {
        throw new GradleException("please set ndk.dir in your local.properties file")
    } else {
        commandLine "${android.ndkDirectory.getAbsolutePath()}/ndk-build", '-C', file('src/main').absolutePath
    }
}


clean {
    delete file("src/main/libs/armeabi").absolutePath
    delete file("src/main/libs/armeabi-v7a").absolutePath
    delete file("src/main/libs/arm64-v8a").absolutePath
    delete file("src/main/obj").absolutePath
}
